# Copyright 2018 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

source_set("userboot") {
  sources = [
    "userboot-image.S",
    "userboot.cpp",
  ]

  # userboot-image.S includes the userboot contents and so must be
  # reassembled when that changes.
  #inputs = [ get_metadata(["$zx/system/core/userboot"],["link_output"]) ]

  include_dirs = [ target_gen_dir ]
  deps += [
    #":gen-userboot-code-header",
    "$zx/kernel/lib/console",
    "$zx/kernel/lib/vdso",
  ]

  #  inputs = [
  #    get_metadata([ "$zx/system/core/userboot" ], [ "gen_rodso_code_inputs" ]),
  #  ]
}

if (false) {
  template("rodso_code_header") {
    toolchain_utils_action(target_name) {
      outputs = invoker.outputs
      assert(outputs == [ outputs[0] ], "outputs must have exactly one element")

      deps = invoker.deps
      sources = [
        get_metadata(deps, [ "gen_rodso_code_inputs" ]),
      ]

      script = "$zx/scripts/gen-rodso-code.sh"
      utils = [
        "nm",
        "readelf",
      ]
      args = [
        rebase_path(outputs[0], root_build_dir),
        get_metadata(deps, [ "gen_rodso_code_args" ]),
      ]
    }
  }

  # The userboot-code.h generated header file tells the userboot.cpp code
  # where the segment boundaries and entry points are.
  rodso_code_header("gen-userboot-code-header") {
    outputs = [
      "$target_gen_dir/userboot-code.h",
    ]
    deps = [
      "$zx/system/core/userboot",
    ]
  }
}
